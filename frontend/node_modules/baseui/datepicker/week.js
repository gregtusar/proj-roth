"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _day = _interopRequireDefault(require("./day"));
var _styledComponents = require("./styled-components");
var _constants = require("./constants");
var _dateFnsAdapter = _interopRequireDefault(require("./utils/date-fns-adapter"));
var _dateHelpers = _interopRequireDefault(require("./utils/date-helpers"));
var _overrides = require("../helpers/overrides");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
class Week extends React.Component {
  constructor(props) {
    super(props);
    _defineProperty(this, "dateHelpers", void 0);
    _defineProperty(this, "renderDays", () => {
      const startOfWeek = this.dateHelpers.getStartOfWeek(this.props.date || this.dateHelpers.date(), this.props.locale);
      // @ts-ignore
      const days = [];
      // @ts-ignore
      return days.concat(
      // @ts-ignore
      _constants.WEEKDAYS.map(offset => {
        const day = this.dateHelpers.addDays(startOfWeek, offset);
        return (
          /*#__PURE__*/
          // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events
          React.createElement(_day.default, {
            adapter: this.props.adapter,
            date: day,
            dateLabel: this.props.dateLabel,
            density: this.props.density,
            disabled: this.dateHelpers.isDayDisabled(day, this.props)
            // @ts-expect-error todo(flow->ts): excludeDates looks to be an error
            ,
            excludeDates: this.props.excludeDates,
            filterDate: this.props.filterDate,
            highlightedDate: this.props.highlightedDate,
            highlighted: this.dateHelpers.isSameDay(day, this.props.highlightedDate),
            includeDates: this.props.includeDates,
            focusedCalendar: this.props.focusedCalendar,
            range: this.props.range,
            key: offset,
            locale: this.props.locale,
            minDate: this.props.minDate,
            maxDate: this.props.maxDate,
            month: this.props.month,
            onSelect: this.props.onChange,
            onBlur: this.props.onDayBlur,
            onFocus: this.props.onDayFocus,
            onClick: this.props.onDayClick,
            onMouseOver: this.props.onDayMouseOver,
            onMouseLeave: this.props.onDayMouseLeave,
            overrides: this.props.overrides,
            peekNextMonth: this.props.peekNextMonth,
            value: this.props.value,
            hasLockedBehavior: this.props.hasLockedBehavior,
            selectedInput: this.props.selectedInput
          })
        );
      }));
    });
    this.dateHelpers = new _dateHelpers.default(props.adapter);
  }
  render() {
    const {
      overrides = {}
    } = this.props;
    const [Week, weekProps] = (0, _overrides.getOverrides)(overrides.Week, _styledComponents.StyledWeek);
    return /*#__PURE__*/React.createElement(Week, _extends({
      role: "row"
    }, weekProps), this.renderDays());
  }
}
exports.default = Week;
_defineProperty(Week, "defaultProps", {
  adapter: _dateFnsAdapter.default,
  // @ts-ignore
  highlightedDate: null,
  onDayClick: () => {},
  onDayFocus: () => {},
  onDayBlur: () => {},
  onDayMouseOver: () => {},
  onDayMouseLeave: () => {},
  onChange: () => {},
  overrides: {},
  peekNextMonth: false
});