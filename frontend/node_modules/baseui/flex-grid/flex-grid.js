"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.BaseFlexGrid = void 0;
var React = _interopRequireWildcard(require("react"));
var _index = require("../block/index");
var _reactHelpers = require("../helpers/react-helpers");
var _overrides = require("../helpers/overrides");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); } /*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
const BaseFlexGrid = exports.BaseFlexGrid = /*#__PURE__*/React.forwardRef(({
  display,
  flexWrap,
  ...restProps
}, ref) => /*#__PURE__*/React.createElement(_index.Block, _extends({
  display: display || 'flex',
  flexWrap: flexWrap || flexWrap === false ? flexWrap : true,
  "data-baseweb": "flex-grid"
}, restProps, {
  ref: ref
})));
BaseFlexGrid.displayName = 'BaseFlexGrid';
const FlexGrid = ({
  forwardedRef,
  children,
  as,
  overrides,
  flexGridColumnCount,
  flexGridColumnGap,
  flexGridRowGap,
  ...restProps
}) => {
  const [FlexGrid, flexGridProps] = (0, _overrides.getOverrides)(overrides && overrides.Block, BaseFlexGrid);
  return /*#__PURE__*/React.createElement(FlexGrid
  // coerced to any because of how react components are typed.
  // cannot guarantee an html element
  , _extends({
    ref: forwardedRef,
    as: as
  }, restProps, flexGridProps),
  // flatten fragments so FlexGrid correctly iterates over fragmentsâ€™ children
  (0, _reactHelpers.flattenFragments)(children).map(
  // @ts-ignore
  (child, flexGridItemIndex, {
    length: flexGridItemCount
  }) => {
    return /*#__PURE__*/React.cloneElement(child, {
      flexGridColumnCount,
      flexGridColumnGap,
      flexGridRowGap,
      flexGridItemIndex,
      flexGridItemCount
    });
  }));
};
const FlexGridComponent = /*#__PURE__*/React.forwardRef((props, ref) =>
/*#__PURE__*/
// eslint-disable-next-line @typescript-eslint/no-explicit-any
React.createElement(FlexGrid, _extends({}, props, {
  forwardedRef: ref
})));
FlexGridComponent.displayName = 'FlexGrid';
var _default = exports.default = FlexGridComponent;