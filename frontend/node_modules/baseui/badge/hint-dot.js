"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _index = require("../styles/index");
var _overrides = require("../helpers/overrides");
var _styledComponents = require("./styled-components");
var _constants = require("./constants");
var _utils = require("./utils");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); } /*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
const HintDot = ({
  children,
  color,
  horizontalOffset: horizontalOffsetProp,
  verticalOffset: verticalOffsetProp,
  hidden,
  overrides = {}
}) => {
  const [HintDot, hintDotProps] = (0, _overrides.getOverrides)(overrides.Badge, _styledComponents.StyledHintDot);
  const [Root, rootProps] = (0, _overrides.getOverrides)(overrides.Root, _styledComponents.StyledRoot);
  const [Positioner, positionerProps] = (0, _overrides.getOverrides)(overrides.Positioner, _styledComponents.StyledPositioner);
  const [, theme] = (0, _index.useStyletron)();
  const anchor = (0, _utils.getAnchorFromChildren)(children);

  // if the anchor is a string, we supply default offsets
  let horizontalOffset = horizontalOffsetProp;
  let verticalOffset = verticalOffsetProp;
  if (typeof anchor === 'string') {
    if (!horizontalOffset) {
      horizontalOffset = '-14px';
    }
    if (!verticalOffset) {
      verticalOffset = '-4px';
    }
  }
  return /*#__PURE__*/React.createElement(Root, rootProps, anchor, /*#__PURE__*/React.createElement(Positioner, _extends({
    $horizontalOffset: horizontalOffset,
    $verticalOffset: verticalOffset,
    $placement: theme.direction === 'rtl' ? _constants.PLACEMENT.topLeft : _constants.PLACEMENT.topRight,
    $role: _constants.ROLE.hintDot
  }, positionerProps), /*#__PURE__*/React.createElement(HintDot, _extends({}, hintDotProps, {
    $color: color,
    $horizontalOffset: horizontalOffset,
    $hidden: hidden
  }))));
};
var _default = exports.default = HintDot;