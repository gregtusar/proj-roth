"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
// Borrowed from vue-cli
var chalk_1 = __importDefault(require("chalk"));
var readline_1 = __importDefault(require("readline"));
function format(label, msg) {
    return msg
        .split('\n')
        .map(function (line, i) {
        return i === 0
            ? label + " " + line
            : String.prototype.padStart(chalk_1.default.reset(label).length, line);
    })
        .join('\n');
}
function chalkTag(msg) {
    return chalk_1.default.bgBlackBright.white.dim(" " + msg + " ");
}
function log(msg, tag) {
    if (msg === void 0) { msg = ''; }
    if (tag === void 0) { tag = null; }
    tag ? console.log(format(chalkTag(tag), msg)) : console.log(msg);
}
exports.log = log;
function info(msg, tag) {
    if (tag === void 0) { tag = null; }
    console.log(format(chalk_1.default.bgBlue.black(' INFO ') + (tag ? chalkTag(tag) : ''), msg));
}
exports.info = info;
function done(msg, tag) {
    if (tag === void 0) { tag = null; }
    console.log(format(chalk_1.default.bgGreen.black(' DONE ') + (tag ? chalkTag(tag) : ''), msg));
}
exports.done = done;
function warn(msg, tag) {
    if (tag === void 0) { tag = null; }
    console.warn(format(chalk_1.default.bgYellow.black(' WARN ') + (tag ? chalkTag(tag) : ''), chalk_1.default.yellow(msg)));
}
exports.warn = warn;
function error(msg, tag) {
    if (tag === void 0) { tag = null; }
    console.error(format(chalk_1.default.bgRed(' ERROR ') + (tag ? chalkTag(tag) : ''), msg));
}
exports.error = error;
function clearConsole(title) {
    if (process.stdout.isTTY) {
        var blank = '\n'.repeat(process.stdout.rows || 0);
        console.log(blank);
        readline_1.default.cursorTo(process.stdout, 0, 0);
        readline_1.default.clearScreenDown(process.stdout);
        if (title) {
            console.log(title);
        }
    }
}
exports.clearConsole = clearConsole;
//# sourceMappingURL=logger.js.map