"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _listItem = _interopRequireDefault(require("./list-item"));
var _overrides = require("../helpers/overrides");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/

const MenuAdapter = /*#__PURE__*/React.forwardRef((props, ref) => {
  return /*#__PURE__*/React.createElement(_listItem.default, {
    ref: ref,
    sublist: props.sublist || props.$size === 'compact',
    "aria-label": props['aria-label'],
    "aria-selected": props['aria-selected'],
    artwork: props.artwork,
    artworkSize: props.artworkSize,
    endEnhancer: props.endEnhancer,
    id: props.id,
    role: props.role,
    overrides: (0, _overrides.mergeOverrides)({
      Root: {
        props: {
          onMouseEnter: props.onMouseEnter,
          onClick: props.onClick
        },
        style: ({
          $theme
        }) => ({
          backgroundColor: props.$isHighlighted ? $theme.colors.menuFillHover : null,
          cursor: props.$disabled ? 'not-allowed' : 'pointer'
        })
      }
    }, props.overrides)
  }, props.children);
});
MenuAdapter.displayName = 'MenuAdapter';
var _default = exports.default = MenuAdapter;