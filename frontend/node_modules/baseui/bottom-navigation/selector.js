"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Selector = void 0;
var React = _interopRequireWildcard(require("react"));
var _styledComponents = require("./styled-components");
var _index = require("../styles/index");
var _overrides = require("../helpers/overrides");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); } /*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
const Selector = ({
  title,
  icon,
  isActive,
  onChange,
  overrides = {}
}) => {
  const [Title, TitleProps] = (0, _overrides.getOverrides)(overrides.Title, _styledComponents.StyledTitle);
  const [Selector, SelectorProps] = (0, _overrides.getOverrides)(overrides.Selector, _styledComponents.StyledSelector);
  const [, theme] = (0, _index.useStyletron)();
  const Icon = icon;
  return /*#__PURE__*/React.createElement(Selector, _extends({
    onClick: onChange,
    role: "tab",
    "aria-selected": isActive
  }, SelectorProps), /*#__PURE__*/React.createElement(Icon, {
    size: 20,
    color: isActive ? theme.colors.contentPrimary : theme.colors.contentTertiary
  }), /*#__PURE__*/React.createElement(Title, _extends({
    $isActive: isActive
  }, TitleProps), title));
};
exports.Selector = Selector;