"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var ReactIs = _interopRequireWildcard(require("react-is"));
var _overrides = require("../helpers/overrides");
var _styledComponents = require("./styled-components");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); } /*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
// @ts-ignore
function RenderNode(props) {
  const {
    component,
    ...restProps
  } = props;
  const Component = component;
  if (!Component) {
    return null;
  }
  if (typeof Component === 'string') {
    return Component;
  }
  if (ReactIs.isValidElementType(Component)) {
    return /*#__PURE__*/_react.default.createElement(Component, restProps);
  }
  return Component;
}

// @ts-ignore
function isMaxLinesValid(maxLines) {
  return maxLines === 1 || maxLines === 2;
}
const ListHeading = /*#__PURE__*/_react.default.forwardRef((props, ref) => {
  const {
    overrides = {},
    maxLines
  } = props;
  const EndEnhancer = props.endEnhancer;
  const EndEnhancerDescription = props.endEnhancerDescription;
  const SubHeading = props.subHeading;
  const [Root, rootProps] = (0, _overrides.getOverrides)(overrides.Root, _styledComponents.StyledHeadingRoot);
  const [Content, contentProps] = (0, _overrides.getOverrides)(overrides.Content, _styledComponents.StyledHeadingContent);
  const [HeadingContainer, headingContainerProps] = (0, _overrides.getOverrides)(overrides.HeadingContainer, _styledComponents.StyledHeadingMainHeading);
  const [SubHeadingContainer, subHeadingContainerProps] = (0, _overrides.getOverrides)(overrides.SubHeadingContainer, _styledComponents.StyledHeadingSubHeading);
  const [EndEnhancerContainer, endEnhancerContainerProps] = (0, _overrides.getOverrides)(overrides.EndEnhancerContainer, _styledComponents.StyledHeadingEndEnhancerContainer);
  const [EndEnhancerDescriptionContainer, endEnhancerDescriptionContainerProps] = (0, _overrides.getOverrides)(overrides.EndEnhancerDescriptionContainer, _styledComponents.StyledHeadingEndEnhancerDescriptionContainer);
  const isEndEnhancerString = typeof EndEnhancer === 'string';
  if (process.env.NODE_ENV !== "production") {
    if (isEndEnhancerString && EndEnhancerDescription) {
      console.warn('endEnhancerDescription will not be rendered if endEnhancer is not a string');
    }
    if (maxLines && !isMaxLinesValid(maxLines)) {
      console.warn('maxLines must be 1 or 2.');
    }
  }
  return /*#__PURE__*/_react.default.createElement(Root
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  , _extends({
    ref: ref
  }, rootProps), /*#__PURE__*/_react.default.createElement(Content, contentProps, /*#__PURE__*/_react.default.createElement(_styledComponents.StyledHeadingContentRow, null, /*#__PURE__*/_react.default.createElement(HeadingContainer, _extends({
    $maxLines: isMaxLinesValid(maxLines) ? maxLines : 1
  }, headingContainerProps), /*#__PURE__*/_react.default.createElement(RenderNode, {
    component: props.heading
  })), EndEnhancer && /*#__PURE__*/_react.default.createElement(EndEnhancerContainer, _extends({
    $isText: isEndEnhancerString
  }, endEnhancerContainerProps), /*#__PURE__*/_react.default.createElement(RenderNode, {
    component: EndEnhancer
  }))), (Boolean(SubHeading) || EndEnhancerDescription) && /*#__PURE__*/_react.default.createElement(_styledComponents.StyledHeadingContentRow, null, /*#__PURE__*/_react.default.createElement(SubHeadingContainer, _extends({
    $maxLines: isMaxLinesValid(maxLines) ? maxLines : 1
  }, subHeadingContainerProps), /*#__PURE__*/_react.default.createElement(RenderNode, {
    component: SubHeading
  })), Boolean(EndEnhancerDescription) && isEndEnhancerString && /*#__PURE__*/_react.default.createElement(EndEnhancerDescriptionContainer, endEnhancerDescriptionContainerProps, /*#__PURE__*/_react.default.createElement(RenderNode, {
    component: EndEnhancerDescription
  })))));
});
ListHeading.displayName = 'ListHeading';
var _default = exports.default = ListHeading;