"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _overrides = require("../helpers/overrides");
var _styledComponents = require("./styled-components");
var _focusVisible = require("../utils/focusVisible");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
class TabComponent extends React.Component {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "state", {
      isFocusVisible: false
    });
    _defineProperty(this, "handleFocus", event => {
      if ((0, _focusVisible.isFocusVisible)(event)) {
        this.setState({
          isFocusVisible: true
        });
      }
    });
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    _defineProperty(this, "handleBlur", event => {
      if (this.state.isFocusVisible !== false) {
        this.setState({
          isFocusVisible: false
        });
      }
    });
    _defineProperty(this, "onClick", e => {
      const {
        disabled,
        onSelect,
        onClick
      } = this.props;
      if (disabled) {
        return;
      }
      typeof onClick === 'function' && onClick(e);
      typeof onSelect === 'function' && onSelect();
      return;
    });
    _defineProperty(this, "onKeyDown", e => {
      const {
        disabled,
        onSelect,
        onKeyDown
      } = this.props;
      if (disabled) {
        return;
      }
      typeof onKeyDown === 'function' && onKeyDown(e);
      // toggle on Enter or Space button pressed
      if (e.key === 'Enter' || e.which === 32) {
        typeof onSelect === 'function' && onSelect();
        e.which === 32 && e.preventDefault(); // prevent jumping scroll when using Space
      }
      return;
    });
  }
  getSharedProps() {
    const {
      disabled,
      active,
      $orientation
    } = this.props;
    return {
      $disabled: disabled,
      $active: active,
      $orientation: $orientation
    };
  }
  render() {
    const {
      active,
      disabled,
      id,
      overrides = {},
      children
    } = this.props;
    const sharedProps = this.getSharedProps();
    const {
      Tab: TabOverride
    } = overrides;
    const [Tab, tabProps] = (0, _overrides.getOverrides)(TabOverride, _styledComponents.Tab);
    return /*#__PURE__*/React.createElement(Tab, _extends({
      $isFocusVisible: this.state.isFocusVisible,
      tabIndex: disabled ? -1 : 0,
      role: "tab",
      id: id,
      "aria-selected": active,
      "aria-disabled": disabled || null
    }, sharedProps, tabProps, {
      onFocus: (0, _focusVisible.forkFocus)(tabProps, this.handleFocus),
      onBlur: (0, _focusVisible.forkBlur)(tabProps, this.handleBlur),
      onClick: this.onClick,
      onKeyDown: this.onKeyDown
    }), children);
  }
}
_defineProperty(TabComponent, "defaultProps", {
  disabled: false,
  expanded: false,
  onSelect: () => {},
  onClick: () => {},
  onKeyDown: () => {},
  title: ''
});
var _default = exports.default = TabComponent;