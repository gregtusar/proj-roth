"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "StatefulContainer", {
  enumerable: true,
  get: function () {
    return _statefulContainer.default;
  }
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _overrides = require("../helpers/overrides");
var _utils = require("./utils");
var _baseInput = _interopRequireDefault(require("./base-input"));
var _styledComponents = require("./styled-components");
var _constants = require("./constants");
var _statefulContainer = _interopRequireDefault(require("./stateful-container"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
class Input extends React.Component {
  constructor(...args) {
    super(...args);
    /**
     * This "Stateless" input still has state. This is private state that
     * customers shouldn't have to manage themselves, such as input's focus state.
     */
    _defineProperty(this, "state", {
      isFocused: this.props.autoFocus || false
    });
    _defineProperty(this, "onFocus", e => {
      this.setState({
        isFocused: true
      });
      // @ts-ignore
      this.props.onFocus(e);
    });
    _defineProperty(this, "onBlur", e => {
      this.setState({
        isFocused: false
      });
      // @ts-ignore
      this.props.onBlur(e);
    });
  }
  render() {
    const {
      startEnhancer,
      endEnhancer,
      overrides: {
        // @ts-ignore
        Root: RootOverride,
        // @ts-ignore
        StartEnhancer: StartEnhancerOverride,
        // @ts-ignore
        EndEnhancer: EndEnhancerOverride,
        ...restOverrides
      },
      ...restProps
    } = this.props;
    const [Root, rootProps] = (0, _overrides.getOverrides)(RootOverride, _styledComponents.Root);
    const [StartEnhancer, startEnhancerProps] = (0, _overrides.getOverrides)(StartEnhancerOverride, _styledComponents.InputEnhancer);
    const [EndEnhancer, endEnhancerProps] = (0, _overrides.getOverrides)(EndEnhancerOverride, _styledComponents.InputEnhancer);
    const sharedProps = (0, _utils.getSharedProps)(this.props, this.state);
    if (process.env.NODE_ENV !== "production") {
      if (this.props.error && this.props.positive) {
        // eslint-disable-next-line no-console
        console.warn(`[Input] \`error\` and \`positive\` are both set to \`true\`. \`error\` will take precedence but this may not be what you want.`);
      }
    }
    return /*#__PURE__*/React.createElement(Root, _extends({
      "data-baseweb": "input"
    }, sharedProps, rootProps, {
      $adjoined: getAdjoinedProp(startEnhancer, endEnhancer),
      $hasIconTrailing: this.props.clearable || this.props.type == 'password'
    }), isEnhancer(startEnhancer) && /*#__PURE__*/React.createElement(StartEnhancer, _extends({}, sharedProps, startEnhancerProps, {
      $position: _constants.ENHANCER_POSITION.start
    }), typeof startEnhancer === 'function' ? startEnhancer(sharedProps) : startEnhancer), /*#__PURE__*/React.createElement(_baseInput.default, _extends({}, restProps, {
      overrides: restOverrides,
      adjoined: getAdjoinedProp(startEnhancer, endEnhancer),
      onFocus: this.onFocus,
      onBlur: this.onBlur
    })), isEnhancer(endEnhancer) && /*#__PURE__*/React.createElement(EndEnhancer, _extends({}, sharedProps, endEnhancerProps, {
      $position: _constants.ENHANCER_POSITION.end
    }), typeof endEnhancer === 'function' ? endEnhancer(sharedProps) : endEnhancer));
  }
}

// @ts-ignore
_defineProperty(Input, "defaultProps", {
  autoComplete: 'on',
  autoFocus: false,
  disabled: false,
  name: '',
  onBlur: () => {},
  onFocus: () => {},
  overrides: {},
  required: false,
  size: _constants.SIZE.default,
  // @ts-ignore
  startEnhancer: null,
  // @ts-ignore
  endEnhancer: null,
  clearable: false,
  type: 'text',
  readOnly: false
});
function getAdjoinedProp(startEnhancer, endEnhancer) {
  if (isEnhancer(startEnhancer) && isEnhancer(endEnhancer)) {
    return _constants.ADJOINED.both;
  } else if (isEnhancer(startEnhancer)) {
    return _constants.ADJOINED.left;
  } else if (isEnhancer(endEnhancer)) {
    return _constants.ADJOINED.right;
  }
  return _constants.ADJOINED.none;
}

// @ts-ignore
function isEnhancer(enhancer) {
  return Boolean(enhancer || enhancer === 0);
}
var _default = exports.default = Input;