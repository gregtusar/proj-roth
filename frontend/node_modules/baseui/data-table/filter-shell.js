"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _button = require("../button");
var _checkbox = require("../checkbox");
var _styles = require("../styles");
var _locale = require("../locale");
var _constants = require("./constants");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/

function FilterShell(props) {
  const [css, theme] = (0, _styles.useStyletron)();
  const locale = React.useContext(_locale.LocaleContext);
  let excludeText;
  switch (props.excludeKind) {
    case 'value':
      excludeText = locale.datatable.filterExcludeValue;
      break;
    case 'range':
      excludeText = locale.datatable.filterExcludeRange;
      break;
    default:
      excludeText = locale.datatable.filterExclude;
  }
  return /*#__PURE__*/React.createElement("form", {
    className: css({
      backgroundColor: theme.colors.backgroundPrimary,
      paddingTop: theme.sizing.scale600,
      paddingRight: theme.sizing.scale600,
      paddingBottom: theme.sizing.scale600,
      paddingLeft: theme.sizing.scale600,
      width: _constants.FILTER_SHELL_WIDTH
    }),
    onSubmit: event => {
      event.preventDefault();
      props.onApply();
    }
  }, props.children, /*#__PURE__*/React.createElement("div", {
    className: css({
      display: 'flex',
      flexDirection: 'column',
      justifyContent: 'space-between',
      alignItems: 'flex-end',
      marginTop: theme.sizing.scale600,
      gap: theme.sizing.scale200
    })
  }, /*#__PURE__*/React.createElement("div", {
    className: css({
      alignSelf: 'flex-start'
    })
  }, /*#__PURE__*/React.createElement(_checkbox.Checkbox, {
    checked: props.exclude,
    onChange: props.onExcludeChange,
    checkmarkType: _checkbox.STYLE_TYPE.toggle_round,
    labelPlacement: "right"
  }, excludeText)), /*#__PURE__*/React.createElement(_button.Button, {
    size: _button.SIZE.compact,
    type: "submit"
  }, locale.datatable.filterApply)));
}
var _default = exports.default = FilterShell;