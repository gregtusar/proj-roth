"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Avatar;
var React = _interopRequireWildcard(require("react"));
var _overrides = require("../helpers/overrides");
var _styledComponents = require("./styled-components");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); } /*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
// @ts-ignore
function getInitials(name) {
  const words = name.split(' ');
  // @ts-ignore
  const initials = words.map(word => word[0]);
  return initials.slice(0, 2).join('').toUpperCase();
}
function Avatar({
  initials,
  name = '',
  overrides = {},
  size = 'scale1000',
  src
}) {
  const imageRef = React.useRef(null);
  const [imageLoaded, setImageLoaded] = React.useState(false);
  function handleLoad() {
    setImageLoaded(true);
  }
  function handleError() {
    setImageLoaded(false);
  }
  React.useEffect(() => {
    setImageLoaded(false);
    if (imageRef.current) {
      if (typeof src === 'string') {
        imageRef.current.src = src;
        imageRef.current.onload = handleLoad;
        imageRef.current.onerror = handleError;
      }
    }
    return () => {
      if (imageRef.current) {
        imageRef.current.onload = null;
        imageRef.current.onerror = null;
      }
    };
  }, [src]);
  const [Avatar, avatarProps] = (0, _overrides.getOverrides)(overrides.Avatar, _styledComponents.Avatar);
  const [Initials, initialsProps] = (0, _overrides.getOverrides)(overrides.Initials, _styledComponents.Initials);
  const [Root, rootProps] = (0, _overrides.getOverrides)(overrides.Root, _styledComponents.Root);
  return /*#__PURE__*/React.createElement(Root, _extends({
    "aria-label": imageLoaded ? null : name,
    role: imageLoaded ? null : 'img',
    $didImageFailToLoad: !imageLoaded,
    $size: size,
    "data-baseweb": "avatar"
  }, rootProps), /*#__PURE__*/React.createElement(Avatar, _extends({
    ref: imageRef,
    alt: name,
    $imageLoaded: imageLoaded,
    $size: size
  }, avatarProps)), !imageLoaded && /*#__PURE__*/React.createElement(Initials, initialsProps, initials || getInitials(name)));
}