"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _week = _interopRequireDefault(require("./week"));
var _styledComponents = require("./styled-components");
var _dateFnsAdapter = _interopRequireDefault(require("./utils/date-fns-adapter"));
var _dateHelpers = _interopRequireDefault(require("./utils/date-helpers"));
var _overrides = require("../helpers/overrides");
var _constants = require("./constants");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
const defaultProps = {
  // @ts-ignore
  dateLabel: null,
  density: _constants.DENSITY.high,
  // @ts-ignore
  excludeDates: null,
  // @ts-ignore
  filterDate: null,
  // @ts-ignore
  highlightDates: null,
  // @ts-ignore
  includeDates: null,
  // @ts-ignore
  locale: null,
  // @ts-ignore
  maxDate: null,
  // @ts-ignore
  minDate: null,
  // @ts-ignore
  month: null,
  adapter: _dateFnsAdapter.default,
  onDayClick: () => {},
  onDayFocus: () => {},
  onDayBlur: () => {},
  onDayMouseOver: () => {},
  onDayMouseLeave: () => {},
  overrides: {},
  peekNextMonth: false,
  // @ts-ignore
  value: null
};
const CALENDAR_MAX_ROWS = 6;
class CalendarMonth extends React.Component {
  constructor(props) {
    super(props);
    _defineProperty(this, "dateHelpers", void 0);
    _defineProperty(this, "getDateProp", () => {
      return this.props.date || this.dateHelpers.date();
    });
    _defineProperty(this, "isWeekInMonth", startOfWeek => {
      const date = this.getDateProp();
      const endOfWeek = this.dateHelpers.addDays(startOfWeek, 6);
      return this.dateHelpers.isSameMonth(startOfWeek, date) || this.dateHelpers.isSameMonth(endOfWeek, date);
    });
    _defineProperty(this, "renderWeeks", () => {
      const weeks = [];
      let currentWeekStart = this.dateHelpers.getStartOfWeek(this.dateHelpers.getStartOfMonth(this.getDateProp()), this.props.locale);
      let i = 0;
      let isWithinMonth = true;
      while (isWithinMonth || this.props.fixedHeight && this.props.peekNextMonth && i < CALENDAR_MAX_ROWS) {
        weeks.push(
        /*#__PURE__*/
        // @ts-ignore
        React.createElement(_week.default, {
          adapter: this.props.adapter,
          date: currentWeekStart,
          dateLabel: this.props.dateLabel,
          density: this.props.density,
          excludeDates: this.props.excludeDates,
          filterDate: this.props.filterDate,
          highlightedDate: this.props.highlightedDate,
          includeDates: this.props.includeDates,
          focusedCalendar: this.props.focusedCalendar,
          range: this.props.range,
          key: i,
          locale: this.props.locale,
          minDate: this.props.minDate,
          maxDate: this.props.maxDate,
          month: this.dateHelpers.getMonth(this.getDateProp()),
          onDayBlur: this.props.onDayBlur,
          onDayFocus: this.props.onDayFocus,
          onDayClick: this.props.onDayClick,
          onDayMouseOver: this.props.onDayMouseOver,
          onDayMouseLeave: this.props.onDayMouseLeave,
          onChange: this.props.onChange,
          overrides: this.props.overrides,
          peekNextMonth: this.props.peekNextMonth,
          value: this.props.value,
          hasLockedBehavior: this.props.hasLockedBehavior,
          selectedInput: this.props.selectedInput
        }));
        i++;
        currentWeekStart = this.dateHelpers.addWeeks(currentWeekStart, 1);
        // It will break on the next week if the week is out of the month
        isWithinMonth = this.isWeekInMonth(currentWeekStart);
      }
      return weeks;
    });
    this.dateHelpers = new _dateHelpers.default(props.adapter);
  }
  render() {
    const {
      overrides = {}
    } = this.props;
    const [Month, monthProps] = (0, _overrides.getOverrides)(overrides.Month, _styledComponents.StyledMonth);
    return /*#__PURE__*/React.createElement(Month, monthProps, this.renderWeeks());
  }
}
exports.default = CalendarMonth;
_defineProperty(CalendarMonth, "defaultProps", defaultProps);