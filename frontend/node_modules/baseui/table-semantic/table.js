"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _styledComponents = require("./styled-components");
var _overrides = require("../helpers/overrides");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
class Table extends React.Component {
  render() {
    const {
      overrides = {},
      columns,
      data,
      divider,
      horizontalScrollWidth,
      isLoading,
      loadingMessage,
      emptyMessage,
      size,
      ...rest
    } = this.props;
    const [Root, rootProps] = (0, _overrides.getOverrides)(overrides.Root, _styledComponents.StyledRoot);
    const [Table, tableProps] = (0, _overrides.getOverrides)(overrides.Table, _styledComponents.StyledTable);
    const [TableHead, tableHeadProps] = (0, _overrides.getOverrides)(overrides.TableHead, _styledComponents.StyledTableHead);
    const [TableHeadRow, tableHeadRowProps] = (0, _overrides.getOverrides)(overrides.TableHeadRow, _styledComponents.StyledTableHeadRow);
    const [TableHeadCell, tableHeadCellProps] = (0, _overrides.getOverrides)(overrides.TableHeadCell, _styledComponents.StyledTableHeadCell);
    const [TableBody, tableBodyProps] = (0, _overrides.getOverrides)(overrides.TableBody, _styledComponents.StyledTableBody);
    const [TableBodyRow, tableBodyRowProps] = (0, _overrides.getOverrides)(overrides.TableBodyRow, _styledComponents.StyledTableBodyRow);
    const [TableBodyCell, tableBodyCellProps] = (0, _overrides.getOverrides)(overrides.TableBodyCell, _styledComponents.StyledTableBodyCell);
    const [TableLoadingMessage, tableLoadingMessageProps] = (0, _overrides.getOverrides)(overrides.TableLoadingMessage, _styledComponents.StyledTableLoadingMessage);
    const [TableEmptyMessage, tableEmptyMessageProps] = (0, _overrides.getOverrides)(overrides.TableEmptyMessage, _styledComponents.StyledTableEmptyMessage);
    const isEmpty = !isLoading && data.length === 0;
    const isRendered = !isLoading && !isEmpty;
    return /*#__PURE__*/React.createElement(Root, _extends({
      "data-baseweb": "table-semantic",
      $divider: divider
    }, rootProps, rest), /*#__PURE__*/React.createElement(Table, _extends({
      $width: horizontalScrollWidth
    }, tableProps), /*#__PURE__*/React.createElement(TableHead, tableHeadProps, /*#__PURE__*/React.createElement(TableHeadRow, tableHeadRowProps, columns.map((col, colIndex) => /*#__PURE__*/React.createElement(TableHeadCell, _extends({
      key: colIndex,
      $col: col,
      $colIndex: colIndex,
      $divider: divider,
      $size: size
    }, tableHeadCellProps), col)))), /*#__PURE__*/React.createElement(TableBody, tableBodyProps, isLoading && /*#__PURE__*/React.createElement("tr", null, /*#__PURE__*/React.createElement("td", {
      colSpan: columns.length
    }, /*#__PURE__*/React.createElement(TableLoadingMessage, tableLoadingMessageProps, typeof loadingMessage === 'function' ? loadingMessage() : loadingMessage))), isEmpty && emptyMessage && /*#__PURE__*/React.createElement("tr", null, /*#__PURE__*/React.createElement("td", {
      colSpan: columns.length
    }, /*#__PURE__*/React.createElement(TableEmptyMessage, tableEmptyMessageProps, typeof emptyMessage === 'function' ? emptyMessage() : emptyMessage))), isRendered && data.map((row, rowIndex) => /*#__PURE__*/React.createElement(TableBodyRow, _extends({
      key: rowIndex,
      $divider: divider,
      $row: row,
      $rowIndex: rowIndex
    }, tableBodyRowProps), columns.map((col, colIndex) => /*#__PURE__*/React.createElement(TableBodyCell, _extends({
      key: colIndex,
      $col: col,
      $colIndex: colIndex,
      $divider: divider,
      $row: row,
      $rowIndex: rowIndex,
      $isLastRow: rowIndex === data.length - 1,
      $size: size
    }, tableBodyCellProps), row[colIndex])))))));
  }
}
exports.default = Table;
_defineProperty(Table, "defaultProps", {
  // @ts-ignore
  columns: [],
  // @ts-ignore
  data: [[]],
  loadingMessage: 'Loading...'
});