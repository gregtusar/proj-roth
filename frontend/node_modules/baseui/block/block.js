"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _styledComponents = require("./styled-components");
var _overrides = require("../helpers/overrides");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); } /*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
const Block = ({
  forwardedRef,
  children,
  as = 'div',
  overrides = {},
  color,
  backgroundAttachment,
  backgroundClip,
  backgroundColor,
  backgroundImage,
  backgroundOrigin,
  backgroundPosition,
  backgroundRepeat,
  backgroundSize,
  font,
  alignContent,
  alignItems,
  alignSelf,
  flexDirection,
  display,
  flex,
  grid,
  gridArea,
  gridAutoColumns,
  gridAutoFlow,
  gridAutoRows,
  gridColumn,
  gridColumnEnd,
  gridColumnGap,
  gridColumnStart,
  gridGap,
  gridRow,
  gridRowEnd,
  gridRowGap,
  gridRowStart,
  gridTemplate,
  gridTemplateAreas,
  gridTemplateColumns,
  gridTemplateRows,
  justifyContent,
  justifyItems,
  justifySelf,
  order,
  position,
  width,
  minWidth,
  maxWidth,
  height,
  minHeight,
  maxHeight,
  overflow,
  margin,
  marginTop,
  marginRight,
  marginBottom,
  marginLeft,
  padding,
  paddingTop,
  paddingRight,
  paddingBottom,
  paddingLeft,
  placeContent,
  placeItems,
  placeSelf,
  flexWrap,
  left,
  top,
  right,
  bottom,
  textOverflow,
  whiteSpace,
  ...restProps
}) => {
  const [BaseBlock, baseBlockProps] = (0, _overrides.getOverrides)(overrides.Block, _styledComponents.StyledBlock);
  return /*#__PURE__*/React.createElement(BaseBlock
  // coerced to any because because of how react components are typed.
  // cannot guarantee an html element
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  , _extends({
    ref: forwardedRef,
    $as: as,
    $color: color,
    $backgroundAttachment: backgroundAttachment,
    $backgroundClip: backgroundClip,
    $backgroundColor: backgroundColor,
    $backgroundImage: backgroundImage,
    $backgroundOrigin: backgroundOrigin,
    $backgroundPosition: backgroundPosition,
    $backgroundRepeat: backgroundRepeat,
    $backgroundSize: backgroundSize,
    $font: font,
    $alignContent: alignContent,
    $alignItems: alignItems,
    $alignSelf: alignSelf,
    $flexDirection: flexDirection,
    $display: display,
    $flex: flex,
    $grid: grid,
    $gridArea: gridArea,
    $gridAutoColumns: gridAutoColumns,
    $gridAutoFlow: gridAutoFlow,
    $gridAutoRows: gridAutoRows,
    $gridColumn: gridColumn,
    $gridColumnEnd: gridColumnEnd,
    $gridColumnGap: gridColumnGap,
    $gridColumnStart: gridColumnStart,
    $gridGap: gridGap,
    $gridRow: gridRow,
    $gridRowEnd: gridRowEnd,
    $gridRowGap: gridRowGap,
    $gridRowStart: gridRowStart,
    $gridTemplate: gridTemplate,
    $gridTemplateAreas: gridTemplateAreas,
    $gridTemplateColumns: gridTemplateColumns,
    $gridTemplateRows: gridTemplateRows,
    $justifyContent: justifyContent,
    $justifyItems: justifyItems,
    $justifySelf: justifySelf,
    $order: order,
    $position: position,
    $width: width,
    $minWidth: minWidth,
    $maxWidth: maxWidth,
    $height: height,
    $minHeight: minHeight,
    $maxHeight: maxHeight,
    $overflow: overflow,
    $margin: margin,
    $marginTop: marginTop,
    $marginRight: marginRight,
    $marginBottom: marginBottom,
    $marginLeft: marginLeft,
    $padding: padding,
    $paddingTop: paddingTop,
    $paddingRight: paddingRight,
    $paddingBottom: paddingBottom,
    $paddingLeft: paddingLeft,
    $placeContent: placeContent,
    $placeItems: placeItems,
    $placeSelf: placeSelf,
    $flexWrap: flexWrap,
    $left: left,
    $top: top,
    $right: right,
    $bottom: bottom,
    $textOverflow: textOverflow,
    $whiteSpace: whiteSpace,
    "data-baseweb": "block"
  }, restProps, baseBlockProps), children);
};

// eslint-disable-next-line @typescript-eslint/no-explicit-any
const BlockComponent = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Block, _extends({}, props, {
  forwardedRef: ref
})));
BlockComponent.displayName = 'Block';
var _default = exports.default = BlockComponent;