"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _tabs = _interopRequireDefault(require("./tabs"));
var _constants = require("./constants");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
class StatefulTabs extends React.Component {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "state", {
      activeKey: this.getInitialKey()
    });
    _defineProperty(this, "onTabChange", newState => {
      this.internalSetState(_constants.STATE_CHANGE_TYPE.change, newState);
    });
  }
  internalSetState(type, changes) {
    const {
      stateReducer,
      onChange
    } = this.props;
    const newState = stateReducer(type, changes, this.state);
    this.setState(newState);
    typeof onChange === 'function' && onChange(newState);
  }
  getInitialKey() {
    const {
      initialState,
      children
    } = this.props;
    if (initialState && initialState.activeKey) {
      return initialState.activeKey;
    } else {
      // @ts-ignore
      return React.Children.map(children, (child, index) => child.key || String(index))[0];
    }
  }
  render() {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    const {
      initialState,
      stateReducer,
      ...restProps
    } = this.props;
    return /*#__PURE__*/React.createElement(_tabs.default, _extends({}, restProps, {
      activeKey: this.state.activeKey,
      onChange: this.onTabChange
    }));
  }
}
exports.default = StatefulTabs;
_defineProperty(StatefulTabs, "defaultProps", {
  disabled: false,
  onChange: () => {},
  overrides: {},
  stateReducer: (type, newState) => newState
});